/**
   * angular-bootstrap-confirm - Displays a bootstrap confirmation popover when clicking the given element.
   * @version v0.5.2
   * @link https://github.com/mattlewis92/angular-bootstrap-confirm
   * @license MIT
   */
!function(e,n){"object"==typeof exports&&"object"==typeof module?module.exports=n(require("angular"),require("angular-sanitize")):"function"==typeof define&&define.amd?define(["angular","angular-sanitize"],n):"object"==typeof exports?exports.angularBootstrapConfirmModuleName=n(require("angular"),require("angular-sanitize")):e.angularBootstrapConfirmModuleName=n(e.angular,e["angular-sanitize"])}(this,function(e,n){return function(e){function n(t){if(o[t])return o[t].exports;var i=o[t]={exports:{},id:t,loaded:!1};return e[t].call(i.exports,i,i.exports,n),i.loaded=!0,i.exports}var o={};return n.m=e,n.c=o,n.p="",n(0)}([function(e,n,o){"use strict";var t=o(1);o(2),o(1),e.exports=t.module("mwl.confirm",["ngSanitize","ui.bootstrap.position"]).controller("PopoverConfirmCtrl",["$scope","$element","$compile","$document","$window","$timeout","$injector","confirmationPopoverDefaults",function(e,n,o,i,s,c,l,r){function a(){var e=g.positionElements(n,h,v.popoverPlacement,!0);e.top+="px",e.left+="px",h.css(e)}function u(e){var n=t.isDefined(v.handleFocus)?v.handleFocus:v.defaults.handleFocus;n&&e[0].focus()}function p(){v.isVisible||(h.css({display:"block"}),a(),u(h.find("button")),v.isVisible=!0),v.isOpen=!0}function d(e){v.isVisible&&(h.css({display:"none"}),v.isVisible=!1,e&&u(n)),v.isOpen=!1}function m(){v.isVisible?d():p(),e.$apply()}function f(o){!v.isVisible||h[0].contains(o.target)||n[0].contains(o.target)||(d(),e.$apply())}var v=this;v.defaults=r,v.popoverPlacement=v.placement||v.defaults.placement;var b=l.has("$uibPosition")?"$uibPosition":"$position",g=l.get(b),x=['<div class="popover" ng-class="vm.popoverPlacement">','<div class="arrow"></div>','<h3 class="popover-title" ng-bind-html="vm.title"></h3>','<div class="popover-content">','<p ng-bind-html="vm.message"></p>','<div class="row">','<div class="col-xs-6">','<button class="btn btn-block" ng-class="\'btn-\' + (vm.confirmButtonType || vm.defaults.confirmButtonType)" ng-click="vm.onConfirm(); vm.hidePopover()" ng-bind-html="vm.confirmText || vm.defaults.confirmText"></button>',"</div>",'<div class="col-xs-6">','<button class="btn btn-block" ng-class="\'btn-\' + (vm.cancelButtonType || vm.defaults.cancelButtonType)" ng-click="vm.onCancel(); vm.hidePopover(true)" ng-bind-html="vm.cancelText || vm.defaults.cancelText"></button>',"</div>","</div>","</div>","</div>"].join("\n"),h=t.element(x);h.css("display","none"),o(h)(e),i.find("body").append(h),v.isVisible=!1,v.showPopover=p,v.hidePopover=d,v.togglePopover=m,e.$watch("vm.isOpen",function(e){c(function(){e?p():d()})}),n.bind("click",m),s.addEventListener("resize",a),i.bind("click",f),i.bind("touchend",f),e.$on("$destroy",function(){h.remove(),n.unbind("click",m),s.removeEventListener("resize",a),i.unbind("click",f),i.unbind("touchend",f)})}]).directive("mwlConfirm",function(){return{restrict:"EA",controller:"PopoverConfirmCtrl as vm",bindToController:!0,scope:{confirmText:"@",cancelText:"@",message:"@",title:"@",placement:"@",onConfirm:"&",onCancel:"&",confirmButtonType:"@",cancelButtonType:"@",isOpen:"=?",handleFocus:"="}}}).value("confirmationPopoverDefaults",{confirmText:"Confirm",cancelText:"Cancel",confirmButtonType:"success",cancelButtonType:"default",placement:"top",handleFocus:!0}).name},function(n,o){n.exports=e},function(e,o){e.exports=n}])});
//# sourceMappingURL=angular-bootstrap-confirm.min.js.map